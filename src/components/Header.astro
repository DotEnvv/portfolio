---
import { SITE, LINKS } from "@consts";
import { cn } from "@lib/utils";
const { pathname } = Astro.url;
const subpath = pathname.match(/[^/]+/g);
import Container from "@components/Container.astro";
---

<header id="header" class="fixed top-0 w-full h-16 z-50">
  <Container size="md">
    <div class="relative h-full w-full flex items-center justify-between">
      <div class="flex items-center gap-4">
        <a
          href="/"
          class="flex gap-1 text-current hover:text-black dark:hover:text-white transition-colors duration-300 ease-in-out"
        >
          <p class="font-bold">Sagar</p>
        </a>
        <button
          id="header-theme-button"
          aria-label={`Toggle light and dark theme`}
          class={cn(
            "size-9 rounded-full p-2 items-center justify-center",
            "bg-transparent hover:bg-black/5 dark:hover:bg-white/20",
            "stroke-current hover:stroke-black hover:dark:stroke-white",
            "border border-black/10 dark:border-white/25",
            "transition-colors duration-300 ease-in-out",
          )}
        >
          <svg class="size-full block dark:hidden">
            <use href="/ui.svg#sun"></use>
          </svg>
          <svg class="size-full hidden dark:block">
            <use href="/ui.svg#moon"></use>
          </svg>
        </button>
      </div>

      <nav class="hidden md:flex items-center justify-center text-sm gap-1">
        {
          LINKS.map((LINK) => (
            <a
              key={LINK.HREF}
              href={LINK.HREF}
              class={cn(
                "h-9 rounded-full font-semibold px-3 text-current",
                "flex items-center justify-center",
                "transition-colors duration-300 ease-in-out",
                pathname === LINK.HREF || "/" + subpath?.[0] === LINK.HREF
                  ? "bg-black/90 dark:bg-white/90 text-white dark:text-black"
                  : "hover:bg-black/5 dark:hover:bg-white/20 hover:text-black dark:hover:text-white",
              )}
            >
              {LINK.TEXT}
            </a>
          ))
        }
      </nav>

      <div class="flex items-center gap-4">
        <a
          href="/rss.xml"
          target="_blank"
          aria-label={`Rss feed for ${SITE.TITLE}`}
          class={cn(
            "hidden md:flex size-9 rounded-full p-2 items-center justify-center",
            "bg-transparent hover:bg-black/5 dark:hover:bg-white/20",
            "stroke-current hover:stroke-black hover:dark:stroke-white",
            "border border-black/10 dark:border-white/25",
            "transition-colors duration-300 ease-in-out",
          )}
        >
          <svg class="size-full">
            <use href="/ui.svg#rss"></use>
          </svg>
        </a>

        <button
          id="header-drawer-button"
          aria-label={`Toggle drawer open and closed`}
          class={cn(
            "flex md:hidden size-9 rounded-full p-2 items-center justify-center",
            "bg-transparent hover:bg-black/5 dark:hover:bg-white/20",
            "stroke-current hover:stroke-black hover:dark:stroke-white",
            "border border-black/10 dark:border-white/25",
            "transition-colors duration-300 ease-in-out",
          )}
        >
          <svg id="drawer-open" class="size-full">
            <use href="/ui.svg#menu"></use>
          </svg>
          <svg id="drawer-close" class="size-full">
            <use href="/ui.svg#x"></use>
          </svg>
        </button>
      </div>
    </div>
  </Container>
</header>

<style>
  #header-drawer-button > #drawer-open {
    @apply block;
  }

  #header-drawer-button > #drawer-close {
    @apply hidden;
  }

  #header-drawer-button.open > #drawer-open {
    @apply hidden;
  }

  #header-drawer-button.open > #drawer-close {
    @apply block;
  }
</style>

<script is:inline>
  function toggleDrawer() {
    const drawer = document.getElementById("drawer");
    const drawerButton = document.getElementById("header-drawer-button");
    drawer?.classList.toggle("open");
    drawerButton?.classList.toggle("open");
  }

  function initializeDrawerButton() {
    const drawerButton = document.getElementById("header-drawer-button");
    drawerButton?.addEventListener("click", toggleDrawer);
  }

  document.addEventListener("astro:after-swap", initializeDrawerButton);
  initializeDrawerButton();
</script>
